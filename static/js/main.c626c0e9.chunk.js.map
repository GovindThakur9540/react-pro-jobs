{"version":3,"sources":["components/Pagination/Pages.jsx","components/Home/Job.jsx","components/Home/Home.jsx","components/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Pages","props","elementArray","i","length","push","DivElement","value","className","change","useContext","PageNumberContext","number","PageContext","id","onClick","Job","date","Date","created_at","expand","ExpandContext","title","getDate","getMonth","getFullYear","type","href","removeTags","how_to_apply","detailsId","src","company_logo","alt","dangerouslySetInnerHTML","__html","description","str","link","match","slice","createContext","Home","useState","setdetailsId","pageNumber","setpageNumber","filteredJobs","jobs","filter","location","fullTime","job","toLowerCase","search","map","lastJob","startJob","Provider","parseInt","Math","ceil","prevState","Header","name","placeholder","onChange","handleFormChange","handleCheckBox","App","setsearch","setjobs","useEffect","axios","get","then","response","data","catch","error","console","log","e","target","checked","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAKe,SAASA,EAAMC,GAI1B,IADA,IAAIC,EAAe,GACVC,EAAI,EAAGA,GAAKF,EAAMG,OAAQD,IAC/BD,EAAaG,KAAK,cAACC,EAAD,CAAoBC,MAAOJ,GAAVA,IAEvC,OACI,qBAAKK,UAAU,QAAf,SACKN,IAKb,SAASI,EAAWL,GAEhB,IAAMQ,EAASC,qBAAWC,GACpBC,EAASF,qBAAWG,GAE1B,OACI,qBAAKC,GAAIb,EAAMM,QAAUK,EAAS,SAAW,GAAIG,QAAS,kBAAMN,EAAOR,EAAMM,QAA7E,SACKN,EAAMM,Q,MCvBZ,SAASS,EAAIf,GAGhB,IAAMgB,EAAO,IAAIC,KAAKjB,EAAMkB,YAGtBC,EAASV,qBAAWW,GAE1B,OACI,sBAAKb,UAAU,MAAf,UACI,6BAAKP,EAAMqB,QACX,8BAAIL,EAAKM,UAAT,MAAuBN,EAAKO,WAA5B,MAA2CP,EAAKQ,iBAChD,4BAAIxB,EAAMyB,OACV,mBAAGC,KAAMC,EAAW3B,EAAM4B,cAA1B,wBACA,qBAAKrB,UAAU,eAAeO,QAAS,kBAAMK,EAAOnB,EAAMa,KAA1D,SACKb,EAAM6B,YAAc7B,EAAMa,GAAK,eAAiB,iBAErD,qBAAKiB,IAAK9B,EAAM+B,aAAcC,IAAKhC,EAAMqB,QAExCrB,EAAM6B,YAAc7B,EAAMa,IAAM,qBAAKoB,wBAAyB,CAAEC,OAAQlC,EAAMmC,aAAe5B,UAAU,mBAKpH,SAASoB,EAAWS,GAChB,GAAIA,EAAK,CACL,IAAMC,EAAOD,EAAIE,MAAM,aACvB,GAAID,EACA,OAAOA,EAAK,GAAGC,MAAM,SAAS,GAAGC,MAAM,EAAGF,EAAK,GAAGC,MAAM,SAAS,GAAGnC,OAAS,ICzBlF,IAAMiB,EAAgBoB,0BAIhB9B,EAAoB8B,0BAGpB5B,EAAc4B,0BAEZ,SAASC,EAAKzC,GAAO,MAGE0C,mBAAS,IAHX,mBAGzBb,EAHyB,KAGdc,EAHc,OAMID,mBAAS,GANb,mBAMzBE,EANyB,KAMbC,EANa,KAS5BC,EAAe9C,EAAM+C,MAGrB/C,EAAMgD,OAAOb,aAAenC,EAAMgD,OAAOC,UAAYjD,EAAMgD,OAAOE,YAG9DlD,EAAMgD,OAAOb,cACbW,EAAeA,EAAaE,QAAO,SAAAG,GAC/B,OAAgF,IAA5EA,EAAI9B,MAAM+B,cAAcC,OAAOrD,EAAMgD,OAAOb,YAAYiB,kBAG7DE,KAAI,SAAAH,GAAG,OAAIA,MAGdnD,EAAMgD,OAAOC,WACbH,EAAeA,EAAaE,QAAO,SAAAG,GAC/B,OAAgF,IAA5EA,EAAIF,SAASG,cAAcC,OAAOrD,EAAMgD,OAAOC,SAASG,kBAG7DE,KAAI,SAAAH,GAAG,OAAIA,MAGdnD,EAAMgD,OAAOE,WACbJ,EAAeA,EAAaE,QAAO,SAAAG,GAC/B,MAA+B,cAA3BA,EAAI1B,KAAK2B,iBAGdE,KAAI,SAAAH,GAAG,OAAIA,OAItB,IAcMI,EAAuB,GAAbX,EACVY,EAAWD,EAAU,GAE3B,OACI,qCACI,cAAC7C,EAAkB+C,SAAnB,CAA4BnD,MAVX,SAACK,GACtBkC,EAAca,SAAS/C,KASnB,SACI,cAACC,EAAY6C,SAAb,CAAsBnD,MAAOsC,EAA7B,SACI,cAAC,EAAD,CAAOzC,OAAQwD,KAAKC,KAAKd,EAAa3C,OAAS,UAGvD,cAACiB,EAAcqC,SAAf,CAAwBnD,MAxBjB,SAACO,GACZ8B,GAAa,SAAAkB,GACT,OAAIA,IAAchD,EACP,IACJA,MAoBP,SACI,qBAAKN,UAAU,iBAAf,SACKuC,EAAaP,MAAMiB,EAAUD,GAASD,KAAI,SAAAH,GAAG,OAAI,cAACpC,EAAD,2BAAsBoC,GAAtB,IAA2BtB,UAAWA,IAA5BsB,EAAItC,c,MC9ErE,SAASiD,EAAO9D,GAC3B,OACI,sBAAKO,UAAU,SAAf,UACI,0CAEA,sBAAKA,UAAU,SAAf,UACI,sBAAKA,UAAU,SAAf,UACI,4CACA,uBAAOkB,KAAK,OAAOsC,KAAK,cAAczD,MAAON,EAAMmC,YAAa6B,YAAY,cAAcC,SAAUjE,EAAMkE,sBAE9G,sBAAK3D,UAAU,SAAf,UACI,yCACA,uBAAOkB,KAAK,OAAOsC,KAAK,WAAWC,YAAY,WAAW1D,MAAON,EAAMiD,SAAUgB,SAAUjE,EAAMkE,sBAErG,sBAAK3D,UAAU,SAAf,UACI,uBAAOkB,KAAK,WAAWsC,KAAK,WAAWjD,QAASd,EAAMmE,eAAgBtD,GAAG,aAD7E,2B,qBCwCDuD,MAnDf,WAAe,MAGe1B,mBAAS,CAAEP,YAAa,GAAIc,SAAU,GAAIC,UAAU,IAHnE,mBAGNG,EAHM,KAGEgB,EAHF,OAMW3B,mBAAS,IANpB,mBAMNK,EANM,KAMAuB,EANA,KA0Cb,OAjCAC,qBAAU,WAQR,OANAC,IAAMC,IADM,8EAETC,MAAK,SAAAC,GACJL,EAAQK,EAASC,SAElBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAEvB,eACN,IAyBD,qCACE,cAAC,EAAD,2BAAYzB,GAAZ,IAAoBa,iBAvBC,SAACe,GAAO,IAAD,EAENA,EAAEC,OAAlBnB,EAFsB,EAEtBA,KAAMzD,EAFgB,EAEhBA,MACd+D,GAAU,SAAAR,GACR,OAAO,2BACFA,GADL,kBAEGE,EAAOzD,QAiB8C6D,eAXrC,SAACc,GACtBZ,GAAU,SAAAR,GACR,OAAO,2BACFA,GADL,IAEEX,SAAU+B,EAAEC,OAAOC,iBAQrB,cAAC,EAAD,CAAMpC,KAAMA,EAAMC,OAAM,eAAOK,SCvCtB+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c626c0e9.chunk.js","sourcesContent":["/* eslint-disable eqeqeq */\r\nimport React, { useContext } from 'react'\r\nimport \"./Pages.css\"\r\nimport { PageNumberContext, PageContext } from \"../Home/Home\"\r\n\r\nexport default function Pages(props) {\r\n\r\n    // creates pagination based on (total length of array of jobs/10) such that each page contains 10 jobs\r\n    let elementArray = []\r\n    for (let i = 1; i <= props.length; i++) {\r\n        elementArray.push(<DivElement key={i} value={i} />)\r\n    }\r\n    return (\r\n        <div className=\"pages\">\r\n            {elementArray}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction DivElement(props) {\r\n\r\n    const change = useContext(PageNumberContext)\r\n    const number = useContext(PageContext)\r\n\r\n    return (\r\n        <div id={props.value === number ? \"active\" : \"\"} onClick={() => change(props.value)}>\r\n            {props.value}\r\n        </div>\r\n    )\r\n}","import React, { useContext } from \"react\"\r\nimport { ExpandContext } from \"./Home\"\r\n\r\nexport function Job(props) {\r\n\r\n    // Converts UTC into Local Date\r\n    const date = new Date(props.created_at)\r\n\r\n    // Context to store id of clicked job for more details\r\n    const expand = useContext(ExpandContext)\r\n\r\n    return (\r\n        <div className=\"job\">\r\n            <h2>{props.title}</h2>\r\n            <p>{date.getDate()} / {date.getMonth()} / {date.getFullYear()}</p>\r\n            <p>{props.type}</p>\r\n            <a href={removeTags(props.how_to_apply)}>Apply Here</a>\r\n            <div className=\"view-details\" onClick={() => expand(props.id)}>\r\n                {props.detailsId === props.id ? \"Hide Details\" : \"View Details\"}\r\n            </div>\r\n            <img src={props.company_logo} alt={props.title} />\r\n\r\n            {props.detailsId === props.id && <div dangerouslySetInnerHTML={{ __html: props.description }} className=\"description\" />}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction removeTags(str) {\r\n    if (str) {\r\n        const link = str.match(/href=.*?>/)\r\n        if (link) {\r\n            return link[0].match(/\".*?\"/)[0].slice(1, link[0].match(/\".*?\"/)[0].length - 1)\r\n        }\r\n    }\r\n}","import React, { useState, createContext } from 'react'\r\nimport Pages from '../Pagination/Pages'\r\nimport \"./Home.css\"\r\nimport { Job } from \"./Job\"\r\n\r\n// Context which tells the clicked job to expand\r\nexport const ExpandContext = createContext()\r\n\r\n// Context which export he function so that when the pageNumber is clciked it sets the pageNumber state \r\n// to that specific value\r\nexport const PageNumberContext = createContext()\r\n\r\n// Context which exports the active pageNumber\r\nexport const PageContext = createContext()\r\n\r\nexport default function Home(props) {\r\n\r\n    // state which stores the id of job clicked by user for more details \r\n    const [detailsId, setdetailsId] = useState(\"\")\r\n\r\n    // state which stores active page number\r\n    const [pageNumber, setpageNumber] = useState(1)\r\n\r\n    // filteredJobs contains the job array\r\n    let filteredJobs = props.jobs\r\n\r\n    // if user enters either job description or location or checks box the filteration is activated\r\n    if (props.filter.description || props.filter.location || props.filter.fullTime) {\r\n\r\n        // if user enters decsription then below filteration takes place\r\n        if (props.filter.description)\r\n            filteredJobs = filteredJobs.filter(job => {\r\n                if (job.title.toLowerCase().search(props.filter.description.toLowerCase()) !== -1)\r\n                    return true\r\n                return false\r\n            }).map(job => job)\r\n\r\n        // if user enters location then below filteration takes place\r\n        if (props.filter.location)\r\n            filteredJobs = filteredJobs.filter(job => {\r\n                if (job.location.toLowerCase().search(props.filter.location.toLowerCase()) !== -1)\r\n                    return true\r\n                return false\r\n            }).map(job => job)\r\n\r\n        // if user checksBox then below filteration takes place\r\n        if (props.filter.fullTime)\r\n            filteredJobs = filteredJobs.filter(job => {\r\n                if (job.type.toLowerCase() === \"full time\")\r\n                    return true\r\n                return false\r\n            }).map(job => job)\r\n    }\r\n\r\n    // when user click view details button then the clicked job id is saved in state to show more details abt it\r\n    const expand = (id) => {\r\n        setdetailsId(prevState => {\r\n            if (prevState === id)\r\n                return \" \"\r\n            return id\r\n        })\r\n    }\r\n\r\n    // when user changes page Number that page is stored to render hat specific job\r\n    const changePageNumber = (number) => {\r\n        setpageNumber(parseInt(number))\r\n    }\r\n\r\n    // based on page number slices the filtered jobs array.\r\n    const lastJob = pageNumber * 10\r\n    const startJob = lastJob - 10\r\n\r\n    return (\r\n        <>\r\n            <PageNumberContext.Provider value={changePageNumber}>\r\n                <PageContext.Provider value={pageNumber}>\r\n                    <Pages length={Math.ceil(filteredJobs.length / 10)} />\r\n                </PageContext.Provider>\r\n            </PageNumberContext.Provider>\r\n            <ExpandContext.Provider value={expand}>\r\n                <div className=\"jobs-container\">\r\n                    {filteredJobs.slice(startJob, lastJob).map(job => <Job key={job.id} {...job} detailsId={detailsId} />)}\r\n                </div>\r\n            </ExpandContext.Provider>\r\n        </>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport \"./Header.css\"\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Pro Jobs</h1>\r\n\r\n            <div className=\"search\">\r\n                <div className=\"inputs\">\r\n                    <p>Description</p>\r\n                    <input type=\"text\" name=\"description\" value={props.description} placeholder=\"Description\" onChange={props.handleFormChange} />\r\n                </div>\r\n                <div className=\"inputs\">\r\n                    <p>Location</p>\r\n                    <input type=\"text\" name=\"location\" placeholder=\"Location\" value={props.location} onChange={props.handleFormChange} />\r\n                </div>\r\n                <div className=\"inputs\">\r\n                    <input type=\"checkbox\" name=\"fullTime\" onClick={props.handleCheckBox} id=\"checkbox\" /> Only Full Time\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport React, { useState, useEffect } from \"react\"\nimport Home from './components/Home/Home';\nimport Header from './components/Header/Header';\nimport axios from 'axios'\n\nfunction App() {\n\n  // stroes data regarding job search\n  const [search, setsearch] = useState({ description: \"\", location: \"\", fullTime: false })\n\n  // stores all the jobs\n  const [jobs, setjobs] = useState([])\n\n  // After all the components are loaded this funtion will fetch jobs from external api\n  useEffect(() => {\n    const url = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json';\n    axios.get(url)\n      .then(response => {\n        setjobs(response.data)\n      })\n      .catch(error => console.log(error))\n\n    return () => { }\n  }, [])\n\n  // whenever the user will enter job description or job locaion it will save those data in search state\n  const handleFormChange = (e) => {\n\n    const { name, value } = e.target\n    setsearch(prevState => {\n      return {\n        ...prevState,\n        [name]: value\n      }\n    })\n  }\n\n  // check if user has clicked fulltime checkbox or not\n  const handleCheckBox = (e) => {\n    setsearch(prevState => {\n      return {\n        ...prevState,\n        fullTime: e.target.checked\n      }\n    })\n  }\n\n  return (\n    <>\n      <Header {...search} handleFormChange={handleFormChange} handleCheckBox={handleCheckBox} />\n      <Home jobs={jobs} filter={{ ...search }} />\n    </>\n  )\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}